/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.consultorach;

import com.mycompany.consultorach.entidades.Competencia;
import com.mycompany.consultorach.entidades.Puesto;
import com.mycompany.consultorach.entidades.Puntuacion;
import dtos.PuestoDTO;
import dtos.UsuarioDTO;
import gestores.GestorPuesto;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Vulturius
 */
public class PuestoEvaluar extends javax.swing.JPanel {

    /**
     * Creates new form PuestoEvaluar
     */
     private JFrame ventana;
    private JPanel padre;
    private List<UsuarioDTO> candidatosDTO;
    public PuestoEvaluar(JFrame ventana, JPanel padre, List<UsuarioDTO> candidatos) {
       this.ventana = ventana;
       this.padre = padre;
      this.candidatosDTO=candidatos;
       //candidatosDTO = candidatos;
       
       
       
       ventana.setTitle("Evaluar candidatos - Puesto a evaluar");
       ventana.setSize(780,500);
       ventana.setVisible(true);
       initComponents();
       this.ventana = ventana;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelBusqueda = new javax.swing.JPanel();
        codigo = new javax.swing.JLabel();
        empresa = new javax.swing.JLabel();
        puesto = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtEmpresa = new javax.swing.JTextField();
        txtPuesto = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        etiquetaBusqueda = new javax.swing.JLabel();
        panelResultados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        etiqueta1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        panelBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Busqueda de puestos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        panelBusqueda.setForeground(new java.awt.Color(0, 0, 0));

        codigo.setBackground(new java.awt.Color(255, 255, 255));
        codigo.setForeground(new java.awt.Color(0, 0, 0));
        codigo.setText("Codigo");

        empresa.setBackground(new java.awt.Color(255, 255, 255));
        empresa.setForeground(new java.awt.Color(0, 0, 0));
        empresa.setText("Empresa");

        puesto.setBackground(new java.awt.Color(255, 255, 255));
        puesto.setForeground(new java.awt.Color(0, 0, 0));
        puesto.setText("Puesto");

        txtCodigo.setBackground(new java.awt.Color(255, 255, 255));
        txtCodigo.setForeground(new java.awt.Color(0, 0, 0));
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        txtEmpresa.setBackground(new java.awt.Color(255, 255, 255));
        txtEmpresa.setForeground(new java.awt.Color(0, 0, 0));
        txtEmpresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpresaKeyTyped(evt);
            }
        });

        txtPuesto.setBackground(new java.awt.Color(255, 255, 255));
        txtPuesto.setForeground(new java.awt.Color(0, 0, 0));
        txtPuesto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuestoKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        etiquetaBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaBusqueda.setForeground(new java.awt.Color(0, 0, 204));

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addComponent(etiquetaBusqueda)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empresa)
                            .addComponent(codigo))
                        .addGap(18, 18, 18)
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(txtCodigo))
                        .addGap(52, 52, 52)
                        .addComponent(puesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBusquedaLayout.createSequentialGroup()
                                .addComponent(txtPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(33, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBusquedaLayout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(19, 19, 19))))))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puesto)
                    .addComponent(txtPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empresa)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addGap(20, 20, 20))
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(etiquetaBusqueda)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        panelResultados.setBackground(new java.awt.Color(255, 255, 255));
        panelResultados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados de busqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        panelResultados.setForeground(new java.awt.Color(0, 0, 0));

        tabla.setAutoCreateRowSorter(true);
        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Empresa", "Puesto"
            }
        ));
        tabla.setShowHorizontalLines(true);
        tabla.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout panelResultadosLayout = new javax.swing.GroupLayout(panelResultados);
        panelResultados.setLayout(panelResultadosLayout);
        panelResultadosLayout.setHorizontalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelResultadosLayout.setVerticalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSeleccionar.setBackground(new java.awt.Color(255, 255, 255));
        btnSeleccionar.setForeground(new java.awt.Color(0, 0, 0));
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        etiqueta1.setBackground(new java.awt.Color(255, 255, 255));
        etiqueta1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(538, Short.MAX_VALUE)
                .addComponent(btnSeleccionar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(22, 22, 22))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiqueta1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiqueta1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSeleccionar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        int fila = tabla.getSelectedRow();
        String nombreEmpresa, nombrePuesto;
        int cod;
        ArrayList columna = new ArrayList();
        for(int i = 0;i<model.getRowCount();i++){   
        columna.add(model.getValueAt(i,0)); //get the all row values at column index 0
   //System.out.println("Las competencias son:" + columna.get(i));
}
         //esto deberia ser con un sleected row()
        
        if(fila==-1){
            JOptionPane.showMessageDialog(this, "Por favor seleccione un puesto de la tabla.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            PuestoDTO puestoSeleccionado = new PuestoDTO();
            nombreEmpresa = (String) model.getValueAt(fila, 1);
            nombrePuesto = (String) model.getValueAt(fila, 2);
            cod = (Integer)model.getValueAt(fila, 0);
            puestoSeleccionado.setEmpresa(nombreEmpresa);
            puestoSeleccionado.setNombre(nombrePuesto);
            puestoSeleccionado.setCodigo(cod);
            List<Puntuacion> puntuaciones = new ArrayList();
            List<Competencia> listaControl = new ArrayList();
            List<Competencia> competencias = new ArrayList();
                    //buscar puestosleccionado
            GestorPuesto gp = GestorPuesto.getInstance();
            puntuaciones =  gp.seleccionarPuesto(puestoSeleccionado);
            listaControl = gp.recuperarCompetencias(puestoSeleccionado);
            
            if(listaControl.size()==puntuaciones.size()){
            puestoSeleccionado.setPuntuaciones(puntuaciones);
            ventana.setContentPane(new Evaluacion(ventana, this, candidatosDTO, puestoSeleccionado ));

            }
            else{
                
                
            JOptionPane.showMessageDialog(this, "El puesto no puede evaluarse porque posee competencias que no cumplen los criterios. Las mismasparecen en la tabla de informacion de competencias. ", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
           
            for(int j=0; j<puntuaciones.size(); j++){
            model.addRow(new Object []{puestoSeleccionado.getId(), puntuaciones.get(j).getCompetencia().getNombre(), puntuaciones.get(j).getCompetencia().getCodigo()});
        }
           /*for(int j=0; j<competencias.size(); j++){
            model.addRow(new Object []{puestoSeleccionado.getId(), competencias.get(j).getNombre(), competencias.get(j).getCodigo()});
        } */
                
            }
            
             }
         
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        // TODO add your handling code here:
        if(txtCodigo.getText().length() > 10){
              Toolkit.getDefaultToolkit().beep();
             evt.consume();
            
         }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtPuestoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuestoKeyTyped
        // TODO add your handling code here:
        char letra= evt.getKeyChar();
        if(Character.isLowerCase(letra)){
            evt.setKeyChar(Character.toUpperCase(letra));
        }
        
         if(txtPuesto.getText().length() > 50){
             evt.consume();
             Toolkit.getDefaultToolkit().beep();
         }
    }//GEN-LAST:event_txtPuestoKeyTyped

    private void txtEmpresaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaKeyTyped
        // TODO add your handling code here:
        char letra= evt.getKeyChar();
        if(Character.isLowerCase(letra)){
            evt.setKeyChar(Character.toUpperCase(letra));
        }
        
         if(txtEmpresa.getText().length() > 50){
             evt.consume();
             Toolkit.getDefaultToolkit().beep();
         }
    }//GEN-LAST:event_txtEmpresaKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "¿Desea regresar a la pantalla de Evaluar candidatos - Evaluación?", "CONFIRMACION", JOptionPane.YES_NO_OPTION);
        switch(result){
            case JOptionPane.YES_OPTION:
                 ventana.setContentPane(new Evaluacion(ventana, this,candidatosDTO,  null));
                 break;
            case JOptionPane.NO_OPTION:
                break;
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
         etiqueta1.setVisible(false);
     etiquetaBusqueda.setVisible(false);
   
     boolean control=true;
     PuestoDTO dto = new PuestoDTO();
     dto.setCodigoP(txtCodigo.getText());
     dto.setNombre(txtPuesto.getText());
     dto.setEmpresa(txtEmpresa.getText());
     
     GestorPuesto gp =  GestorPuesto.getInstance();
     int[] mensajes = gp.validarDatosGestionarPuesto(dto);
     if(txtCodigo.getText().isEmpty()==false){
         etiquetaBusqueda.setText("Si introduce un valor en codigo los demas campos no seran tenidos en cuenta para la busqueda.");
         etiquetaBusqueda.setVisible(true);
     }
        if(mensajes[0]==1){
            etiqueta1.setText("Por favor introduzca al menos un criterio de busqueda.");
            etiqueta1.setVisible(true);
            control=false;
            Toolkit.getDefaultToolkit().beep();
        }
        
       if(control==true){
            List<Puesto>  puestosDTO =  gp.buscarPuestoSegunCriterio(dto);
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            if(puestosDTO.isEmpty()){
                etiqueta1.setText("No existe ningun puesto con los criterios especificado.");
                etiqueta1.setVisible(true);
                control=false;
                Toolkit.getDefaultToolkit().beep();
            }else{
               
                  for(int i = model.getRowCount()-1; i>=0; i--){
             model.removeRow(i);
            }
            for (int i=0; i<puestosDTO.size(); i++){
            model.addRow(new Object[]{puestosDTO.get(i).getCodigo(),puestosDTO.get(i).getEmpresa(), puestosDTO.get(i).getNombre()});
           
    }}
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel codigo;
    private javax.swing.JLabel empresa;
    private javax.swing.JLabel etiqueta1;
    private javax.swing.JLabel etiquetaBusqueda;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBusqueda;
    private javax.swing.JPanel panelResultados;
    private javax.swing.JLabel puesto;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtPuesto;
    // End of variables declaration//GEN-END:variables
}
