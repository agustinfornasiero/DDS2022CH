/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.consultorach;

import dtos.UsuarioDTO;
import gestores.GestorCandidato;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vulturius
 */
public class BusquedaCandidatos extends javax.swing.JPanel {

    /**
     * Creates new form BusquedaCandidatos
     */
    private JFrame ventana;
    private JPanel padre;
    public BusquedaCandidatos(JFrame ventana, JPanel padre) {
        this.ventana = ventana;
       this.padre = padre;
       ventana.setTitle("Evaluar candidatos - Busqueda de candidatos");
       ventana.setSize(810,750);
       ventana.setVisible(true);
       initComponents();
       this.ventana = ventana;
       
      
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        panelBusqueda = new javax.swing.JPanel();
        apellido = new javax.swing.JLabel();
        numeroCandidato = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        etiquetaBusqueda = new javax.swing.JLabel();
        panelResultado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaResultado = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        etiquetaResultado = new javax.swing.JLabel();
        panelEvaluar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEvaluar = new javax.swing.JTable();
        btnQuitar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        panelBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda de candidatos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        panelBusqueda.setForeground(new java.awt.Color(0, 0, 0));

        apellido.setBackground(new java.awt.Color(255, 255, 255));
        apellido.setForeground(new java.awt.Color(0, 0, 0));
        apellido.setText("Apellido");

        numeroCandidato.setBackground(new java.awt.Color(255, 255, 255));
        numeroCandidato.setForeground(new java.awt.Color(0, 0, 0));
        numeroCandidato.setText("Numero de candidato");

        nombre.setBackground(new java.awt.Color(255, 255, 255));
        nombre.setForeground(new java.awt.Color(0, 0, 0));
        nombre.setText("Nombre");

        txtApellido.setBackground(new java.awt.Color(255, 255, 255));
        txtApellido.setForeground(new java.awt.Color(0, 0, 0));
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        txtNombre.setBackground(new java.awt.Color(255, 255, 255));
        txtNombre.setForeground(new java.awt.Color(0, 0, 0));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtNumero.setBackground(new java.awt.Color(255, 255, 255));
        txtNumero.setForeground(new java.awt.Color(0, 0, 0));
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        etiquetaBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaBusqueda.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numeroCandidato)
                            .addComponent(apellido))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellido)
                            .addComponent(txtNumero))
                        .addGap(38, 38, 38)
                        .addComponent(nombre)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addComponent(etiquetaBusqueda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)))
                .addGap(17, 17, 17))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellido)
                    .addComponent(nombre)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numeroCandidato)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiquetaBusqueda)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBusquedaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addGap(19, 19, 19))))
        );

        panelResultado.setBackground(new java.awt.Color(255, 255, 255));
        panelResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados de busqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        tablaResultado.setAutoCreateRowSorter(true);
        tablaResultado.setBackground(new java.awt.Color(255, 255, 255));
        tablaResultado.setForeground(new java.awt.Color(0, 0, 0));
        tablaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido", "Nombre", "Tipo documento", "Nro documento"
            }
        ));
        tablaResultado.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(tablaResultado);

        btnAgregar.setBackground(new java.awt.Color(255, 255, 255));
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        etiquetaResultado.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout panelResultadoLayout = new javax.swing.GroupLayout(panelResultado);
        panelResultado.setLayout(panelResultadoLayout);
        panelResultadoLayout.setHorizontalGroup(
            panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelResultadoLayout.createSequentialGroup()
                        .addComponent(etiquetaResultado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelResultadoLayout.setVerticalGroup(
            panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(etiquetaResultado))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        panelEvaluar.setBackground(new java.awt.Color(255, 255, 255));
        panelEvaluar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Candidatos a evaluar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        tablaEvaluar.setAutoCreateRowSorter(true);
        tablaEvaluar.setBackground(new java.awt.Color(255, 255, 255));
        tablaEvaluar.setForeground(new java.awt.Color(0, 0, 0));
        tablaEvaluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido", "Nombre", "Tipo documento", "Nro documento"
            }
        ));
        tablaEvaluar.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(tablaEvaluar);

        btnQuitar.setBackground(new java.awt.Color(255, 255, 255));
        btnQuitar.setForeground(new java.awt.Color(0, 0, 0));
        btnQuitar.setText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEvaluarLayout = new javax.swing.GroupLayout(panelEvaluar);
        panelEvaluar.setLayout(panelEvaluarLayout);
        panelEvaluarLayout.setHorizontalGroup(
            panelEvaluarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEvaluarLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelEvaluarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnQuitar)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelEvaluarLayout.setVerticalGroup(
            panelEvaluarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEvaluarLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnQuitar)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        btnSiguiente.setBackground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setForeground(new java.awt.Color(0, 0, 0));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panelEvaluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelBusqueda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSiguiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEvaluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnSiguiente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        GestorCandidato gc = GestorCandidato.getInstance();
         List<UsuarioDTO> listaFiltrados = new ArrayList();
        List<UsuarioDTO> listaSeleccionados = new ArrayList();
        List<UsuarioDTO> listaCandidatos = new ArrayList();
        DefaultTableModel model = (DefaultTableModel) tablaEvaluar.getModel();

       if(model.getRowCount()==0){
          JOptionPane.showMessageDialog(this, "Debe seleccionar al menos un candidato a evaluar.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);

       }else{
           
           for(int i = 0; i<tablaEvaluar.getRowCount(); i++){
              UsuarioDTO dto = new UsuarioDTO();
              ///AC AA GREGAR EK NIUM
             // dto.setNumeroCandidato(SOMEBITS);
              //
              dto.setApellido((String)model.getValueAt(i,0));
              dto.setNombre((String) model.getValueAt(i, 1));
              dto.setTipoDocumento((String) model.getValueAt(i, 2));
              dto.setDocumento((String) model.getValueAt(i, 3));
              listaSeleccionados.add(dto);
           }
        /*listaFiltrados = listaSeleccionados;
         //listaFiltrados = eliminarRepetidos(listaSeleccionados);
         for(int v = 0; v<listaFiltrados.size()-1; v++){
             String doc = listaFiltrados.get(v).getDocumento();
             for(int b =v+1; b<listaFiltrados.size();v++){
                 if(doc==listaFiltrados.get(b).getDocumento()){
                     listaFiltrados.get(b).setId(0);
                 }
             }
         }
         
         List<UsuarioDTO> aux = new ArrayList();
         for(int d = 0; d<listaFiltrados.size(); d++){
             if(listaFiltrados.get(d).getId() != 0){
                 aux.add(listaFiltrados.get(d));
             }
         }*/
       listaCandidatos=gc.comprobarCandidatos(listaSeleccionados);
       
       if(listaCandidatos.size()==listaSeleccionados.size()){
           //EN ESTE PUNTO YA SE GENERARON LAS CLAVES
           
           for(int g = 0; g<listaCandidatos.size(); g++){
               System.out.println("NOMBRE: "+listaCandidatos.get(g).getNombre()+" SU CLAVE ES: "+listaCandidatos.get(g).getClave());
           }
            ventana.setContentPane(new Evaluacion(ventana, this,listaSeleccionados, null));
       }else{
           
        JOptionPane.showMessageDialog(this, "Los candidatos que aparecen en la tabla resultados no pueden evaluarse por tener cuestionarios activos o en proceso.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        List<UsuarioDTO> noCumplen = new ArrayList();
        DefaultTableModel model2 = (DefaultTableModel) tablaResultado.getModel();
        
        for(int i = model2.getRowCount(); i>=0; i--){
             model2.removeRow(i);
            }
        for(int j=0; j<listaCandidatos.size()-1;j++){
            model2.addRow(new Object[]{listaCandidatos.get(j).getApellido(), listaCandidatos.get(j).getNombre(), listaCandidatos.get(j).getTipoDocumento(), listaCandidatos.get(j).getDocumento()});
        }
        for(int k=0; k<model.getRowCount(); k++){
           for(int h=0; h<listaCandidatos.size();h++){
               if((String)model.getValueAt(k, 3) == listaCandidatos.get(h).getDocumento() )
                      model.removeRow(k);
               }
        }
       } 
           
       }
        
           
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        // TODO add your handling code here:
         char letra= evt.getKeyChar();
        if(Character.isLowerCase(letra)){
            evt.setKeyChar(Character.toUpperCase(letra));
        }
        
         if(txtApellido.getText().length() > 50){
             evt.consume();
             Toolkit.getDefaultToolkit().beep();
         }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // TODO add your handling code here:
         char letra= evt.getKeyChar();
        if(Character.isLowerCase(letra)){
            evt.setKeyChar(Character.toUpperCase(letra));
        }
        
         if(txtNombre.getText().length() > 50){
             evt.consume();
             Toolkit.getDefaultToolkit().beep();
         }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
         
        
         if(txtNumero.getText().length() > 10){
              Toolkit.getDefaultToolkit().beep();
             evt.consume();
            
         }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "¿Desea regresar al Menú Principal?", "CONFIRMACION", JOptionPane.YES_NO_OPTION);
        switch(result){
            case JOptionPane.YES_OPTION:
                 ventana.setContentPane(new Menu(ventana, this));
                 break;
            case JOptionPane.NO_OPTION:
                break;
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        etiquetaBusqueda.setVisible(false);
        etiquetaResultado.setVisible(false);
        GestorCandidato gc = GestorCandidato.getInstance();
        UsuarioDTO dto = new UsuarioDTO();
        List<UsuarioDTO> resultado = new ArrayList();
        dto.setApellido(txtApellido.getText());
        dto.setNombre(txtNombre.getText());
        if(txtNumero.getText().isEmpty()){
             dto.setNumeroCandidato(-1);
        }else{
                    dto.setNumeroCandidato(Integer.parseInt(txtNumero.getText()));
        
        etiquetaBusqueda.setText("Si ingresa un numero de candidato, los criterios apellido y nombre no seran tenidos en cuenta para la busqueda.");
        etiquetaBusqueda.setVisible(true);
        }
        resultado = gc.buscarCandidatoSegunCriterio(dto);
        
        DefaultTableModel model = (DefaultTableModel) tablaResultado.getModel();
         for(int i = model.getRowCount()-1; i>=0; i--){
             model.removeRow(i);
            }
       if(resultado.isEmpty()){
           etiquetaResultado.setText("No se ha encontrado ningun candidato para los criterios ingresados.");
           etiquetaResultado.setVisible(true);
       }else{
              for(int i=0; i<resultado.size(); i++){
            model.addRow(new Object[]{resultado.get(i).getApellido(), resultado.get(i).getNombre(), resultado.get(i).getTipoDocumento(), resultado.get(i).getDocumento()});
        }
        
       }
          
      
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
         DefaultTableModel resultado = (DefaultTableModel) tablaResultado.getModel();
        DefaultTableModel evaluar = (DefaultTableModel) tablaEvaluar.getModel();
      //Object[] row = new Object[100];
       int[] filas =  tablaResultado.getSelectedRows();
       ArrayList c = obtenerColumna(tablaResultado, 3);
       
       /*if(evaluar.getRowCount()>0){
           for(int j=0; j<evaluar.getRowCount(); j++){
        if(c.contains(tablaEvaluar.getValueAt(filas[j],3))){
        //JOptionPane.showMessageDialog(this, "El candidato ya ha sido seleccionado.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        tablaEvaluar.remove(j);
    }}
       
       }*/
       
        System.out.println("Cantidad de filas: "+filas.length);
        //evaluar.addRow(fila);
        if(filas.length >0){
            for(int i = 0; i<filas.length; i++){
               /* int filasEvaluar = evaluar.getRowCount();
               if(filasEvaluar>0){
                    if(c.contains(tablaEvaluar.getValueAt(filas[i],3))){
                    JOptionPane.showMessageDialog(this, "El candidato ya ha sido seleccionado.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                    
                }
          }else{*/
            
              
           evaluar.addRow(new Object[]{tablaResultado.getValueAt(filas[i], 0), tablaResultado.getValueAt(filas[i], 1), tablaResultado.getValueAt(filas[i], 2), tablaResultado.getValueAt(filas[i], 3) });
         // }
           //faltaria ver como haga para no agregar un candidato que ya estaba agregado
          
       }
            
          
        }else{
             JOptionPane.showMessageDialog(this, "Seleccione al menos un candidato", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }
        

    }//GEN-LAST:event_btnAgregarActionPerformed
    
    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablaEvaluar.getModel();
        int[] fila=tablaEvaluar.getSelectedRows();
        if(fila.length > 0){
            
           
             for(int i = model.getRowCount()-1; i>=0; i--){
             model.removeRow(i);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Debe selecciona al menos una fila para eliminar.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnQuitarActionPerformed
public ArrayList obtenerColumna(JTable tabla, Integer a){
       ArrayList columna = new ArrayList();
       DefaultTableModel model = (DefaultTableModel) tabla.getModel();
    for(int i = 0;i<model.getRowCount();i++)
    {   
   columna.add(model.getValueAt(i,a)); //get the all row values at column index 0
   //System.out.println("Las competencias son:" + columna.get(i));
}
return columna;
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellido;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JLabel etiquetaBusqueda;
    private javax.swing.JLabel etiquetaResultado;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel numeroCandidato;
    private javax.swing.JPanel panelBusqueda;
    private javax.swing.JPanel panelEvaluar;
    private javax.swing.JPanel panelResultado;
    private javax.swing.JTable tablaEvaluar;
    private javax.swing.JTable tablaResultado;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
